<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xml:lang="en-us" lang="en-us">
<head>
<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
<meta name="copyright" content="(C) Copyright 2005" />
<meta name="DC.rights.owner" content="(C) Copyright 2005" />
<meta content="task" name="DC.Type" />
<meta name="DC.Title" content="Implementing a PSP Integration Adapter" />
<meta content="XHTML" name="DC.Format" />
<meta content="task_E68E2024B1F6403AAA1130A39B1D4DCD" name="DC.Identifier" />
<meta content="en-us" name="DC.Language" />
<link href="../../commonltr.css" type="text/css" rel="stylesheet" />
<link href="../../book.css" type="text/css" rel="stylesheet" />
<title>Implementing a PSP Integration Adapter</title>
</head>
<body id="task_E68E2024B1F6403AAA1130A39B1D4DCD">


    <h1 class="topictitle1">Implementing a PSP Integration Adapter</h1>

    <div>
        <div class="section">The PSP integration adapter must implement the methods of the <samp class="codeph">PaymentServiceProvider</samp> interface. The following methods need to be implemented for a new PSP:<ul>
                <li><samp class="codeph">determineRegistrationLink</samp> - provides the required data and a URL to the PSP for registering new payment information</li>

                <li><samp class="codeph">determineReregistrationLink</samp> - provides the required data and a URL to the PSP for updating existing payment information data</li>

                <li><samp class="codeph">deregisterPaymentInformation</samp> - deregisters a customer's payment information</li>

                <li><samp class="codeph">charge</samp> - triggers the charging of the customer</li>

            </ul>
<p>Proceed as follows:</p>
</div>

        <ol><li class="stepexpand">
                <span>Implement the <samp class="codeph">determineRegistrationLink</samp> method as</span>
                 
                    <p><samp class="codeph">RegistrationLink determineRegistrationLink(RequestData data)</samp></p>

                    <p>This method provides the required data and a URL to the PSP which is used later in the response call in the case that a customer needs to register new payment information with the PSP. The response provided by the PSP is the URL to its registration page which is opened afterwards. </p>

                
            </li>
<li class="stepexpand">
                <span>Implement the <samp class="codeph">determineReregistrationLink</samp> method as</span>
                 
                    <p><samp class="codeph">RegistrationLink determineReregistrationLink(RequestData data)</samp></p>

                    <p>This method provides the required data and a URL to the PSP which is used later in the response call in the case that a customer needs to update existing payment information at the PSP. The response provided by the PSP is the URL to the appropriate page for changing the data which is opened afterwards. </p>

                
            </li>
<li class="stepexpand">
                <span>Implement the <samp class="codeph">deregisterPaymentInformation</samp> method as </span>
                 
                    <p><samp class="codeph">void deregisterPaymentInformation(RequestData data)</samp></p>

                    <p>This method is triggered by <span>OSCM</span> and needed to deregister a customer's payment information at the PSP.</p>

                
            </li>
<li class="stepexpand">
                <span>Implement the <samp class="codeph">charge</samp> method as</span>
                 
                    <p><samp class="codeph">ChargingResult charge(RequestData data, ChargingData chargingData)</samp></p>

                    <p>This method triggers the PSP to charge a customer for using services in <span>OSCM</span>.</p>

                
            </li>
</ol>

        <div class="section">
            <p>The following data is provided by the request call: </p>

            <ul>
                <li><samp class="codeph">organizationId</samp> - the ID of a customer organization as specified in <span>OSCM</span>.</li>

                <li><samp class="codeph">organizationName</samp> - the name of the customer organization as specified in <span>OSCM</span>.</li>

                <li><samp class="codeph">organizationEmail</samp> - the email address of the customer organization as specified in <span>OSCM</span>.</li>

                <li><samp class="codeph">currentUserLocale</samp> - the language of the calling user. By default, this is the language set in the user's profile in <span>OSCM</span>.</li>

                <li><samp class="codeph">paymentTypeId</samp> - the identifier of the payment type to be set in the payment information at the PSP. </li>

                <li><samp class="codeph">pspIdentifier</samp> - the ID provided by the PSP for the supplier or reseller organization which offers the service the customer is to be charged for by the PSP.</li>

                <li><samp class="codeph">externalIdentifier</samp> - the ID provided by the PSP for the payment information of the customer who is to be charged.</li>

                <li><samp class="codeph">List&lt;Property&gt; properties</samp> - Configuration settings and their values which are needed for the communication with the PSP. The required configuration settings are provided by the PSP. The <span>OSCM</span> operator must specify these configuration settings when creating a new PSP. </li>

            </ul>

            <p>The following data is sent from <span>OSCM</span> to the PSP integration adapter with the request call and must be sent back to <span>OSCM</span> unchanged via the callback component after the request has been processed: </p>

            <ul>
                <li><samp class="codeph">organizationKey</samp> - the technical key of the customer organization. </li>

                <li><samp class="codeph">paymentTypeKey</samp> - the technical key of the payment type. </li>

                <li><samp class="codeph">paymentInfoKey</samp> - the technical key of the payment information if the payment information is already defined. It is used for updating the information. </li>

                <li><samp class="codeph">paymentInfoId</samp> - the name of the payment information as defined by the customer. </li>

            </ul>

            <p>The <samp class="codeph">charge</samp> method additionally provides the required billing data. </p>

        </div>

    </div>

<div>
<hr align="left" width="100%" />
<p>Copyright FUJITSU LIMITED 2020</p>
</div>
</body>
</html>