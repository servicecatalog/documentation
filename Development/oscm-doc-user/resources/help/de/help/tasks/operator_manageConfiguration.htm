<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xml:lang="de-de" lang="de-de">
<head>
<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
<meta name="copyright" content="(C) Copyright 2005" />
<meta name="DC.rights.owner" content="(C) Copyright 2005" />
<meta content="task" name="DC.Type" />
<meta name="DC.Title" content="Konfiguration aktualisieren" />
<meta scheme="URI" name="DC.Relation" content="../../Shared/reference/r_ConfigSettings_UI.htm" />
<meta content="XHTML" name="DC.Format" />
<meta content="task634" name="DC.Identifier" />
<meta content="de-de" name="DC.Language" />
<link href="../../commonltr.css" type="text/css" rel="stylesheet" />
<link href="../../book.css" type="text/css" rel="stylesheet" />
<title>Konfiguration aktualisieren</title>
</head>
<body id="task634">


  <h1 class="topictitle1">Konfiguration aktualisieren</h1>

  <div>
    <div class="section">
      <p>Die Plattform-Software benötigt einige Konfigurationseinstellungen, um die Runtime-Umgebung mit Containern funktionsfähig zu machen. Vor dem Deployment der Container wurden die obligatorischen Einstellungen bereits in Umgebungsvariablen in Docker-Dateien gesetzt. </p>

      <p>Auf der Seite <span class="uicontrol">Konfiguration aktualisieren</span> sehen Sie die aktuellen Konfigurationseinstellungen, die in der Datenbank gespeichert sind. Während der Installation haben Sie die Einstellungen an Ihre Umgebung angepasst, vor allem Servernamen, Ports, Pfade und Benutzernamen. Sie können die aktuellen Einstellungen jederzeit aktualisieren und ändern.</p>

      <div class="p">
        <div class="note"><span class="notetitle">Hinweis:</span> Beachten Sie, dass im Portal nur Änderungen für Testzwecke gemacht werden sollten. Ihre Änderungen werden verworfen, sobald die Container neu gestartet werden.  </div>

      </div>

      <p>Möchten Sie Konfigurationseinstellungen dauerhaft in der Datenbank ändern, gehen Sie wie folgt vor: </p>

      <div class="p">
        <ol>
          <li>Wechseln Sie auf dem Docker-Host in das Datenverzeichnis der Plattform (<samp class="codeph">&lt;docker&gt;</samp>) und führen Sie alle folgenden Schritte in diesem Verzeichnis aus.</li>

          <li>Bearbeiten Sie die Datei <samp class="codeph">var.env</samp> in dem Verzeichnis entsprechend Ihrer Anforderungen. </li>

          <li>Wenn Sie den voreingestellten Wert einer Einstellung ändern möchten, die noch nicht in der Datei <samp class="codeph">var.env</samp> enthalten ist: <p>Fügen Sie den Schlüssel und den Wert der Einstellung in der Datei <samp class="codeph">var.env</samp> hinzu.</p>
<p>Die Schlüssel finden Sie auf der Seite <span class="uicontrol">Konfiguration aktualisieren</span>. Beispiel: </p>
<p><samp class="codeph">TIMER_INTERVAL_SUBSCRIPTION_EXPIRATION=345600000</samp></p>
</li>

          <li>Speichern Sie die Datei <samp class="codeph">var.env</samp> an ihrer ursprünglichen Stelle:<p><samp class="codeph">&lt;docker&gt;/var.env</samp></p>
</li>

          <li>Exportieren Sie die Variablen der Konfigurationsdatei <samp class="codeph">.env</samp> im selben Verzeichnis:<div class="p">
              <pre class="codeblock">set -a
. ./.env
set +a</pre>

            </div>
</li>

          <li>Setzen Sie in der Datei <samp class="codeph">docker-compose-initdb.yml</samp> im selben Verzeichnis das Flag <samp class="codeph">OVERWRITE</samp> im Abschnitt <samp class="codeph">environment</samp> von <samp class="codeph">oscm-initdb-core</samp> auf <samp class="codeph">true</samp>, um die Einstellung in der Datenbank zu ändern. <div class="p">
              <pre class="codeblock">oscm-initdb-core:
    image: ${IMAGE_INITDB}
    container_name: oscm-initdb-core
    env_file: var.env
    environment:
      - TARGET=CORE
      - SOURCE=INIT
      - OVERWRITE=<strong>true</strong>
      - LOG_LEVEL=INFO
    links:
- oscm-db:oscm-db</pre>

            </div>
</li>

          <li>Stoppen und löschen Sie alle Container:<div class="p">
              <pre class="codeblock">docker-compose -f docker-compose-oscm.yml stop
docker-compose -f docker-compose-oscm.yml rm -f </pre>

            </div>
</li>

          <li>Starten Sie den Container zur Datenbank-Initialisierung, dann stoppen und löschen Sie ihn wieder:<div class="p">
              <pre class="codeblock">docker-compose -f docker-compose-initdb.yml up -d oscm-db 
docker-compose -f docker-compose-initdb.yml up oscm-initdb-core 
docker-compose -f docker-compose-initdb.yml up oscm-initdb-jms 
docker-compose -f docker-compose-initdb.yml up oscm-initdb-app 
docker-compose -f docker-compose-initdb.yml up oscm-initdb-controller-openstack
docker-compose -f docker-compose-initdb.yml up oscm-initdb-controller-aws 
docker-compose -f docker-compose-initdb.yml stop 
docker-compose -f docker-compose-initdb.yml rm -f</pre>

            </div>
</li>

          <li>Starten Sie alle Container der Anwendung neu:<div class="p">
              <pre class="codeblock">docker-compose -f docker-compose-oscm.yml up -d</pre>

            </div>
</li>

          <li>Setzen Sie in der Datei <samp class="codeph">docker-compose-initdb.yml</samp>  das Flag <samp class="codeph">OVERWRITE</samp> zurück auf <samp class="codeph">false</samp>.</li>

        </ol>

      </div>

    </div>

  </div>

  <div>
<div class="linklist"><strong>Weitere Themen</strong><br />

<div><a href="../../Shared/reference/r_ConfigSettings_UI.htm">-Konfigurationseinstellungen</a></div></div>
</div>

</body>
</html>