<?xml version="1.0"?> 
<!-- Copyright FUJITSU ENABLING SOFTWARE TECHNOLOGY GMBH 2021 -->
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd"

[
<!ENTITY % entities PUBLIC "-//XDOC//ENTITIES//FujitsuUserDoc" "entities.dtd">
]>

<task xml:lang="en-us" id="task_E68E2024B1F6403AAA1130A39B1D4DCD">
    <title>Implementing the Provisioninig Service as a Java Service</title>
    <taskbody>
        <context>
            <p>It is recommended to use the JAX-WS framework for implementing a provisioning service. JAX-WS offers APIs to directly address a Web service specified by a WSDL file and to obtain a proxy implementation of the interface.</p>
            <p>A provisioning service implementation is used for inbound calls. This means that you implement the Web service and annotate the implementation to get published. </p>
            <p>If the application is deployed in a Java EE-compliant application server, the provisioning service can be deployed as an annotated bean. The service implementation can be either a stateless session bean when deployed as J2EE application, or a plain Java object when deployed as part of a Web application. In both cases, the annotation is <codeph>javax.jws.WebService</codeph> with a reference to the service definition. </p>
            <p>Your provisioning service must implement the provisioning API of <ph
                    conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                />, for example, as shown here:</p>
            <p>
                <codeblock>@WebService(serviceName = "ProvisioningService",
          targetNamespace = "http://oscm.org/xsd",
          endpointInterface = 
             "org.oscm.provisioning.intf.ProvisioningService")
public class MyProvisioningServiceImpl implements ProvisioningService 
{
   //...
}</codeblock>
            </p>
            <p>Note that the target namespace must be exactly the same as defined in the Web service interface. </p>
            <p>The <codeph>endpointInterface</codeph> attribute refers to the Java interface defining the Web service. This allows the implementation class to provide the respective Java method implementations. All Web service-related annotations are taken from the interface. </p>
        </context>
    </taskbody>
</task>
