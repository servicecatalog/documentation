<?xml version="1.0"?> 
<!-- Copyright FUJITSU ENABLING SOFTWARE TECHNOLOGY GMBH 2021 -->
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd"

[
<!ENTITY % entities PUBLIC "-//XDOC//ENTITIES//FujitsuUserDoc" "entities.dtd">
]>

<task xml:lang="en-us" id="task_E68E2024B1F6403AAA1130A39B1D4DCD">
    <title>Implementation Details</title>
    <taskbody>
        <context>The following steps provide an overview of the methods you need to implement for a provisioning service.<note>
                <p>If you are using the asynchronous provisioning platform for developing a provisioning service, you do not need to implement these methods. Instead, you develop a service controller. </p>
                <p>For details, refer to the documentation provided with the integration package for asynchronous provisioning (<codeph>oscm-integration-app-pack.zip</codeph> file).</p>
            </note></context>
        <steps>
            <step>
                <cmd>Implement at least the following methods:</cmd>
                <info>
                    <ul>
                        <li><codeph>createInstance</codeph> for the synchronous provisioning of an instance or <codeph>asyncCreateInstance</codeph> for the asynchronous provisioning of an instance. </li>
                        <li>
                            <codeph>deleteInstance</codeph>
                        </li>
                    </ul>
                </info>
            </step>
            <step>
                <cmd>If your application has parameters that are set during instance provisioning, implement the <codeph>modifySubscription</codeph> or <codeph>asyncModifySubscription</codeph> method.</cmd>
            </step>
            <step>
                <cmd>If your application allows for upgrading or downgrading to another application instance, implement the <codeph>upgradeSubscription</codeph> or <codeph>asyncUpgradeSubscription</codeph> method.</cmd>
            </step>
            <step>
                <cmd>If users access your application through <ph
                        conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                    />, implement the following methods:</cmd>
                <info>
                    <ul>
                        <li>
                            <codeph>createUsers</codeph>
                        </li>
                        <li>
                            <codeph>deleteUsers</codeph>
                        </li>
                        <li>
                            <codeph>updateUsers</codeph>
                        </li>
                    </ul>
                </info>
            </step>
            <step>
                <cmd>If you are using asynchronous instance provisioning (<codeph>asyncCreateInstance</codeph>), you need to implement calls to the following methods of the subscription management service<ph audience="doc"> (see <xref
                        href="../Interfaces/c_PlatformServices.xml"/>)</ph>:</cmd>
                <info>
                    <ul>
                        <li>
                            <codeph>abortAsyncSubscription</codeph>
                        </li>
                        <li>
                            <codeph>completeAsyncSubscription</codeph>
                        </li>
                    </ul>
                </info>
            </step>
            <step>
                <cmd>If you implement the <codeph>asyncModifySubscription</codeph> method, you need to implement calls to the following methods of the subscription management service<ph audience="doc"> (see <xref
                        href="../Interfaces/c_PlatformServices.xml"/>)</ph>:</cmd>
                <info>
                    <ul>
                        <li><codeph>abortAsyncModifySubscription</codeph></li>
                        <li><codeph>completeAsyncModifySubscription</codeph></li>
                    </ul>
                </info>
            </step>
            <step>
                <cmd>If you implement the <codeph>asyncUpgradeSubscription</codeph> method, you need to implement calls to the following methods of the subscription management service<ph audience="doc"> (see <xref
                        href="../Interfaces/c_PlatformServices.xml"/>)</ph>:</cmd>
                <info>
                    <ul>
                        <li><codeph>abortAsyncUpgradeSubscription</codeph></li>
                        <li><codeph>completeAsyncUpgradeSubscription</codeph></li>
                    </ul>
                </info>
            </step>
            <step>
                <cmd>Deploy your provisioning service and make sure that it is operational.</cmd>
            </step>
        </steps>
        <result>
            <p>For each organization role, the following tables list the methods of the provisioning service which are called when specific user actions are executed in <ph
                    conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                />. The dependencies on the chosen access type and other parameters are also described, if applicable. </p>
            <p>For details on access types, refer to the <i>Technology Provider's Guide</i>. </p>
            <p>
                <b>Technology Provider</b>
            </p>
            <table colsep="1" frame="all" rowsep="1">
                <tgroup cols="3">
                    <colspec colname="col1" colnum="1" colwidth="1.0*"/>
                    <colspec colname="newCol2" colnum="2" colwidth="1.0*"/>
                    <colspec colname="col2" colnum="3" colwidth="1.20*"/>
                    <thead>
                        <row>
                            <entry colname="col1">User Action</entry>
                            <entry>Method</entry>
                            <entry colname="col2">Behavior</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry colname="col1">
                                <uicontrol>Import service definition</uicontrol>
                                <p>Click a service entry to view the details in the <ph
                                        conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                                    /> administration portal.</p></entry>
                            <entry>
                                <codeph>sendPing()</codeph>
                            </entry>
                            <entry><codeph>sendPing()</codeph> is called for all access types except external.</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <p>
                <b>Supplier/Reseller/Broker</b>
            </p>
            <table colsep="1" frame="all" rowsep="1">
                <tgroup cols="3">
                    <colspec colname="col1" colnum="1" colwidth="1.0*"/>
                    <colspec colname="newCol2" colnum="2" colwidth="1.0*"/>
                    <colspec colname="col2" colnum="3" colwidth="1.20*"/>
                    <thead>
                        <row>
                            <entry colname="col1">User Action</entry>
                            <entry>Method</entry>
                            <entry colname="col2">Behavior</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <uicontrol>Terminate a subscription</uicontrol>
                            </entry>
                            <entry>
                                <codeph>deleteInstance()</codeph>
                            </entry>
                            <entry><codeph>deleteInstance()</codeph> is called for each deleted subscription and for all access types except external.</entry>
                        </row>
                        <row>
                            <entry>
                                <uicontrol>Activate or deactivate services</uicontrol>
                                <p>Activate a service.</p></entry>
                            <entry>
                                <codeph>sendPing()</codeph>
                            </entry>
                            <entry><codeph>sendPing()</codeph> is called for all access types except external.</entry>
                        </row>
                        <row>
                            <entry>
                                <uicontrol>Manage payment types</uicontrol>
                                <p>Deactivate/reactivate a payment type for a customer.</p></entry>
                            <entry>
                                <codeph>deactivateInstance()</codeph>
                                <p><codeph>activateInstance()</codeph></p></entry>
                            <entry><codeph>deactivateInstance()</codeph> and <codeph>activateInstance()</codeph> are called for all access types except external. <p><codeph>deactivateInstance()</codeph> is called if the customer uses the deactivated payment type to pay for his subscriptions. <codeph>activateInstance()</codeph> is called if a deactivated payment type used by the customer is made available again. The methods are called for each affected subscription.</p>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <p>
                <b>Customer</b>
            </p>
            <table colsep="1" frame="all" rowsep="1">
                <tgroup cols="3">
                    <colspec colname="col1" colnum="1" colwidth="1.0*"/>
                    <colspec colname="newCol2" colnum="2" colwidth="1.0*"/>
                    <colspec colname="col2" colnum="3" colwidth="1.20*"/>
                    <thead>
                        <row>
                            <entry colname="col1">User Action</entry>
                            <entry>Method</entry>
                            <entry colname="col2">Behavior</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry colname="col1">
                                <uicontrol>Subscribe to a service</uicontrol>
                            </entry>
                            <entry>
                                <codeph>createInstance()</codeph>
                                <p>
                                    <codeph>asyncreateInstance()</codeph>
                                </p></entry>
                            <entry><codeph>createInstance()</codeph> is called for login, direct, and user access in synchronous mode.<p><codeph>asyncreateInstance()</codeph> is called for login, direct, and user access in asynchronous mode.</p><p>A list of all parameters and values of a service can be retrieved with the <codeph>getParameterValue()</codeph> method of the <codeph>InstanceRequest</codeph> class. </p></entry>
                        </row>
                        <row>
                            <entry colname="col1">
                                <uicontrol>Manage Users</uicontrol>
                                <p>Modify user profiles, no changes in assignments to subscriptions</p></entry>
                            <entry>
                                <codeph>updateUsers()</codeph>
                            </entry>
                            <entry><codeph>updateUsers()</codeph> is called for login and user access.<p>The method is called independent of any changes in the user profile. </p></entry>
                        </row>
                        <row>
                            <entry>
                                <uicontrol>Assign users to a subscription</uicontrol>
                                <p>Assign one or more users to the selected subscription</p></entry>
                            <entry>
                                <codeph>createUsers()</codeph>
                            </entry>
                            <entry><codeph>createUsers()</codeph> is called for login and user access.<p>The method is called for each assigned user. The <codeph>users</codeph> parameter contains the list of users who are to be assigned to the selected subscription. </p></entry>
                        </row>
                        <row>
                            <entry>
                                <uicontrol>Deassign users from a subscription</uicontrol>
                                <p>Deassign one or more users from the selected subscription</p></entry>
                            <entry>
                                <codeph>deleteUsers()</codeph>
                            </entry>
                            <entry><codeph>deleteUsers()</codeph> is called for login and user access.<p>The method is called for each deassigned user. The <codeph>users</codeph> parameter contains the list of users who are to be deassigned from the selected subscription. </p></entry>
                        </row>
                        <row>
                            <entry>
                                <uicontrol>Modify a subscription</uicontrol>
                            </entry>
                            <entry>
                                <codeph>modifySubscription()</codeph><p><codeph>asyncModifySubscription()</codeph></p>
                            </entry>
                            <entry><codeph>modifySubscription()</codeph> is called in synchronous mode for all access types except external.<p><codeph>asyncModifySubscription()</codeph> is called in asynchronous mode for all access types except external.</p><p>The method is called when customizable parameters or the subscription ID are changed by the customer. </p></entry>
                        </row>
                        <row>
                            <entry>
                                <uicontrol>Up/Downgrade a subscription</uicontrol>
                            </entry>
                            <entry>
                                <codeph>upgradeSubscription()</codeph><p><codeph>asyncUpgradeSubscription()</codeph></p>
                            </entry>
                            <entry><codeph>upgradeSubscription()</codeph> is called in synchronous mode for all access types except external.<p><codeph>asyncUpgradeSubscription()</codeph> is called in asynchronous mode for all access types except external.</p><p>The method is called when a customer upgrades or downgrade a subscription.</p></entry>
                        </row>
                        <row>
                            <entry>
                                <uicontrol>Terminate a subscription</uicontrol>
                            </entry>
                            <entry>
                                <codeph>deleteInstance()</codeph>
                            </entry>
                            <entry><codeph>deleteInstance()</codeph> is called for all access types except external.</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <p audience="int">
                <b>Notification emails</b>
            </p>
            <p audience="int">When a customer registers or when an organization is created by the <ph
                    conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                    /> operator, an email address must be specified for the administrator of the organization, and one for the organization. When a user is registered, a user-specific email address must be specified. These email addresses a re-used to send notification emails. The following table gives an overview of the situations when notification emails are sent by <ph
                    conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"/>. </p>
            <table colsep="1" frame="all" rowsep="1" audience="int">
                <tgroup cols="3">
                    <colspec colname="col1" colnum="1" colwidth="1.6*"/>
                    <colspec colname="newCol2" colnum="2" colwidth="1.0*"/>
                    <colspec colname="col2" colnum="3" colwidth="1.37*"/>
                    <thead>
                        <row>
                            <entry colname="col1">Action </entry>
                            <entry>Email is sent to</entry>
                            <entry colname="col2">Email notification</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>A customer registered, or an organization was created.</entry>
                            <entry>the administrator's email address ###or organization's email address?###.</entry>
                            <entry>Notification about the registration with the URL, user ID, and the initial password.</entry>
                        </row>
                        <row>
                            <entry colname="col1">A user was registered.</entry>
                            <entry>the user's email address.</entry>
                            <entry>Notification about registration with URL to confirm the registration</entry>
                        </row>
                        <row>
                            <entry>A user confirmed the registration.</entry>
                            <entry>the user's email address.</entry>
                            <entry>Notification about the confirmation with URL to access the account</entry>
                        </row>
                        <row>
                            <entry>An organization was assigned as marketplace owner.</entry>
                            <entry>the administrator's email address ###or organization's email address?###.</entry>
                            <entry>Notification about the assignment with URLs to access the related marketplaces</entry>
                        </row>
                        <row>
                            <entry>A subscription was created.</entry>
                            <entry>the administrator's email address ###or organization's email address?###.</entry>
                            <entry>Notification about the new subscription.</entry>
                        </row>
                        <row>
                            <entry>The access to a subscription was granted to a user. </entry>
                            <entry>the user's email address.</entry>
                            <entry>Notification about the new subscription access with URL to access the subscription.</entry>
                        </row>
                        <row>
                            <entry>A subscription was activated.</entry>
                            <entry>the administrator's email address ###or organization's email address?###.</entry>
                            <entry>Notification about the activation.</entry>
                        </row>
                        <row>
                            <entry>Subscription was terminated or is scheduled to be terminated</entry>
                            <entry>the administrator's email address ###or organization's email address?###.</entry>
                            <entry>Notification about the termination respectively the date of the termination.</entry>
                        </row>
                        <row>
                            <entry>The access to a subscription was terminated for a user.</entry>
                            <entry>the user's email address.</entry>
                            <entry>Notification about the termination.</entry>
                        </row>
                        <row>
                            <entry>A subscription was upgraded or downgraded.</entry>
                            <entry>the administrator's email address ###or organization's email address?###.</entry>
                            <entry>Notification about the upgrade or downgrade.</entry>
                        </row>
                        <row>
                            <entry>A service was suspended for a specific user.</entry>
                            <entry>the user's email address.</entry>
                            <entry>Notification about the suspension and the reason for it.</entry>
                        </row>
                        <row>
                            <entry>A review comment was removed for a specific user.</entry>
                            <entry>the user's email address.</entry>
                            <entry>Notification about the removal and the reason for it.</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <p>If a subscription expires, the <codeph>deactivateInstance()</codeph> method is called and the instances related to the subscription are deactivated. If the subscription is updated and activated again, the <codeph>activateInstance()</codeph> method is called.</p>
            <p>For details on the methods and data objects, refer to the Javadoc for the <ph
                    conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                    /> provisioning API shipped in the <ph
                    conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"/> integration package.</p>
        </result>
    </taskbody>
</task>
