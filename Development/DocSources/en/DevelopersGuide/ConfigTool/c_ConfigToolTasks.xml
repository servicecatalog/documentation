<?xml version="1.0" encoding="UTF-8"?>  
<!-- Copyright FUJITSU ENABLING SOFTWARE TECHNOLOGY GMBH 2020 -->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
                         "concept.dtd" [<!ENTITY % entities PUBLIC '-//XDOC//ENTITIES//FujitsuUserDoc' 'entities.dtd'>
]>

<concept id="concept_tasks" xml:lang="en-us">
    <title>Overview of Tasks</title>
    <conbody>
        <section>
            <p>To enable the integration with <ph conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                    />, the following development tasks have to be implemented on the side of the external parameter configuration tool. <ph
                    conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                /> provides resources that support you in the implementation.</p>
        </section>
        <section>
            <title>Implementing Cross-Document Messaging</title>
            <p>For sending text messages from the domain of the external parameter configuration tool to the domain of <ph
                    conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                />, you can use the public JavaScript API for cross-document messaging.</p>
            <p><ph conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                    /> provides a sample tool implemented in JavaScript. You can integrate it with <ph
                    conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                /> to see how cross-document messaging works. The sample demonstrates the key aspects involved in the integration.</p>
            <p>The sample tool is provided in the <ph
                    conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
            /> integration package (<codeph><xref format="html"
                href="https://github.com/servicecatalog/development/releases" scope="external"
                ><u><i>oscm-integration-pack.zip</i></u></xref></codeph>). From the <codeph>readme.htm</codeph> file of the integration package, you can download the sample and directly access the description on how to integrate it.</p>
        </section>
        <section>
            <title>Implementing JSON Encoding and Decoding</title>
            <p>For sending data to <ph conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                    />, the parameter configuration tool must encode its text messages to JSON. JSON messages received from <ph
                    conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"/> must be decoded. </p>
            <p>If you want to encode and decode the text messages with JavaScript, you can use the public domain JavaScript library <codeph>json2.js</codeph>. It contains the methods required for implementing JSON encoders and decoders. </p>
        </section>
        <section>
            <title>Implementing the Data Structures</title>
            <p>For the exchange of data, the message and parameter definitions must be implemented in accordance with the predefined syntax. <ph audience="doc">For details, refer to <xref
                    href="../ConfigTool/c_ConfigToolMessageInt.xml"/></ph>.</p>
            <p>A JavaScript library, <codeph>configurationAPI.js</codeph>, is provided that you can use for implementing the message and parameter definitions. The library is included in the <ph
                    conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
            /> integration package (<codeph><xref format="html"
                href="https://github.com/servicecatalog/development/releases" scope="external"
                ><u><i>oscm-integration-pack.zip</i></u></xref></codeph>). From the <codeph>readme.htm</codeph> file of the integration package, you can directly access the library.</p>
        </section>
        <section>
            <title>Next Steps</title>
            <p>To link the external parameter configuration tool with <ph
                    conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                    />, the supplier has to specify the URL of the tool in the service definition. The URL is not validated by <ph
                    conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                    />, neither for syntax nor for semantic. The supplier has to ensure that the script does not introduce any security leaks. For details, refer to the <i>Supplier's Guide</i>.</p>
        </section>
    </conbody>
</concept>
