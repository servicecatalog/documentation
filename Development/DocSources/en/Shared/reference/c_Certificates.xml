<?xml version="1.0" encoding="UTF-8"?>  
<!-- Copyright FUJITSU ENABLING SOFTWARE TECHNOLOGY GMBH 2021 -->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
                         "concept.dtd" [<!ENTITY % entities PUBLIC '-//XDOC//ENTITIES//FujitsuUserDoc' 'entities.dtd'>
]>

<concept id="concept_B32294CC9FA643A2A14A74B1DAA49C95" xml:lang="en-us">
    <title>Integrating Custom SSL Certificates and Key Files</title>
    <conbody>
        <p>Certificates are required for <ph conref="../Product_Name.xml#ProductNameTopic/Product_Abbr"
                /> to allow for trusted communication between <ph
                conref="../Product_Name.xml#ProductNameTopic/Product_Abbr"
                /> and the Asynchronous Provisioning Platform (APP), an application underlying a technical service, or an external authorization server. <!--ph>a payment service provider (PSP).</ph--> The <ph
                conref="../Product_Name.xml#ProductNameTopic/Product_Abbr"
                /> deployment creates an appropriate directory structure and Docker Compose configuration, and inserts default certificates for the individual containers, thus allowing for secure communication between <ph
                conref="../Product_Name.xml#ProductNameTopic/Product_Abbr"
            /> and APP or standard authorization systems such as Microsoft Azure.</p>
        <p>In addition, you can import individual certificates to the <ph
                conref="../Product_Name.xml#ProductNameTopic/Product_Abbr"
            /> containers or make use of custom SSL key pairs for the application listeners. All you need to do is place the certificates and/or key files into the appropriate directories on the Docker host as described in more detail below. The certificates may be self-signed or official. Privacy Enhanced Mail (PEM) format is mandatory. This is a container format that may include just a public certificate or an entire certificate chain with public key, private key, and root certificates. </p>
    </conbody>
</concept>
