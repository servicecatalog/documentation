<?xml version="1.0" encoding="UTF-8"?>  
<!-- Copyright FUJITSU ENABLING SOFTWARE TECHNOLOGY GMBH 2020 -->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
                         "concept.dtd" [<!ENTITY % entities PUBLIC '-//XDOC//ENTITIES//FujitsuUserDoc' 'entities.dtd'>
]>

<concept id="CertIntro" xml:lang="en-us">
    <title>Introduction</title>
    <conbody>
        <section>
            <p id="cert1">Web service calls coming from <ph conref="../Product_Name.xml#ProductNameTopic/Product_Abbr"
                /> (e.g. for provisioning application instances for services, or for integrating a process control system) or sent to it <!--ph>(e.g. by an application such as a PSP system)</ph--> can be secured with SSL. SSL is used for authentication and for encryption at the transport level.</p>
            <p id="cert2">Every HTTPS connection involves a client and a server. Depending on the calling direction, <ph
                    conref="../Product_Name.xml#ProductNameTopic/Product_Abbr"
                    /> can act as a server (Web service calls to <ph
                    conref="../Product_Name.xml#ProductNameTopic/Product_Abbr"
                    />) or as a client (Web service calls from <ph
                    conref="../Product_Name.xml#ProductNameTopic/Product_Abbr"/>).</p>
            <p>Every application integrated with <ph
                    conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                    /> or accessing the platform services acts as a Web service client. <ph
                    conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                /> acts as the server, and the client must provide its authenticating data to the server: </p>
            <p>The caller sends the key or ID and password of an <ph
                    conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                    /> user. SOAP-based calls address the <ph
                    conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                    /> Web services with the <codeph>BASIC</codeph> suffix. This mechanism does not apply certificates for user authentication. However, certificates are involved because the communication between the client and <ph
                    conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
                /> must be secured using TLS/SSL and HTTPS. You should also configure your network's firewall to block JNDI lookups from the outside when using basic authentication. </p>
            <p id="Note">
                <note>Both, the server and the client certificates must be created and signed using the same JRE/JDK. Otherwise, the communication may fail.</note>
            </p>
        </section>
        <section id="Terminology">
            <title>Terminology</title>
            <p><ph conref="../Product_Name.xml#ProductNameTopic/Product_Abbr"
                /> uses an <b>X.509 </b>certificate to prove the identity of an entity. This certificate is always used to prove the server's identity and optionally to prove the client's identity. </p>
            <p>A certificate has a <b>subject</b> which usually identifies the owner of the certificate, and an <b>issuer</b> who signed the certificate. A certificate also includes a validity period. Cryptographic algorithms ensure that the information contained in the certificate cannot be changed without breaking the signature of the certificate.</p>
            <p>The subject as well as the issuer is given as a <b>distinguished name (DN)</b> consisting of a list of key-value pairs. One of the standardized keys is called <b>common name (CN)</b>. The CN is of particular importance to HTTPS servers: The CN must contain the server's domain; otherwise the client will refuse the connection.</p>
            <p>The process of issuing a certificate for another entity is called <b>signing</b>. Certificates always form a chain up to a certain <b>root certificate</b>. In a root certificate, the subject and the issuer are one and the same entity. Such certificates are called "<b>self-signed</b>".</p>
            <p>Signing certificates or proofing that someone is the owner of a certificate requires the possession of the corresponding <b>private key</b>. While certificates can be distributed to other parties, special care must be taken to keep the private key secret.</p>
            <p>Each client and server may have a keystore and a truststore. A <b>keystore</b> is used to keep certificates along with the corresponding private key. This means that a keystore is used to prove your own identity or to sign certificates. A <b>truststore</b> contains public certificates of other entities.</p>
        </section>
    </conbody>
</concept>
