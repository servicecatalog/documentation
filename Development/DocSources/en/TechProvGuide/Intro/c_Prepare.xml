<?xml version="1.0" encoding="UTF-8"?>  
<!-- Copyright FUJITSU ENABLING SOFTWARE TECHNOLOGY GMBH 2020 -->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
                         "concept.dtd" [<!ENTITY % entities PUBLIC '-//XDOC//ENTITIES//FujitsuUserDoc' 'entities.dtd'>
]>

<concept id="concept_CC3DFA9536824295B364E161B9DCC6F1" xml:lang="en-us">
  <title>Preparing Applications for Usage in a SaaS Model</title>
  <conbody>
    <section>
      <p>An application that is to be offered in a SaaS model should take the following aspects into consideration:</p>
    </section>
    <section>
      <title>Remote Interface</title>
      <p>Your application should have a remote interface by which users can access it from anywhere in the Web (Internet/Intranet). This may be, for example, a Web user interface or a Web service.</p>
    </section>
    <section>
      <title>Multi-Tenancy</title>
      <p>Your application should have multi-tenancy capabilities, at least with respect to the management of data: <ph
          id="The_data_of_different_custome_concept_conbody_section_3_p"
          >The data of different customers or of different service subscriptions of a customer should be clearly separated from each other and only be accessible by the respective customer or subscription user.</ph>
      </p>
      <p><ph id="In_concept_conbody_section_3_p">In <ph
            conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
            />, the term "instance" refers to what is provisioned for a tenant (customer or subscription) on the application side.</ph> Before integrating an application with <ph
            conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
          />, you must decide what to consider an instance in the context of the application. <ph id="Possible_solutions_range_from_concept_conbody_section_3_p">Possible solutions range from using different workspaces in one data container over maintaining different databases to instantiating different virtual servers in an Infrastructure as a Service (IaaS) environment.</ph></p>
      <p>Also, you need to decide what you want to provision an instance for. The usual and recommended way is to provision one instance for each subscription: </p>
      <fig><image height="166" href="../_images/InstancesOnePerSubs.png" width="350"/></fig>
    </section>
    <section>In case your application runs in a stateless mode and there is no need to store any data, or in case you know that a customer will only use one subscription, you could use one instance for a customer or you could even use a single instance for all subscriptions of all customers: <fig><image
          height="166" href="../_images/InstancesOnePerCust.png" width="350"/></fig><fig><image height="166"
          href="../_images/InstancesOneForAll.png" width="350"/></fig></section>
    <section>
      <title>High Scalability</title>
      <p>The number of users, performance, and space requirements may differ to a great extent for each customer. Therefore, your application should provide for high scalability.</p>
    </section>
    <section>
      <title>High Availability</title>
      <p>Ideally, your application should be available 24x7. You may consider having your application hosted in a professional data center that takes care of non-stop operation, backup, data security, and regular maintenance.</p>
    </section>
    <section>
      <title>Security</title>
      <p>Consider the following security aspects when implementing your application: Web service calls between <ph
          conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
        /> and the application can be sent as plain text containing a user ID and password. </p>
      <p>For secure communication, the usage of certificates is recommended.</p>
    </section>
  </conbody>
</concept>
