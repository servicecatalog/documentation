<?xml version="1.0" encoding="UTF-8"?>  
<!-- Copyright FUJITSU ENABLING SOFTWARE TECHNOLOGY GMBH 2021 -->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
                         "concept.dtd">
<concept id="id_112">
  <title>Usage Scenarios</title>
  <conbody>
    <section>
      <p>The <ph conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
        /> Shell integration supports the following usage scenarios: </p>
      <ul compact="no">
        <li><b>Provisioning script</b>: When a customer subscribes to a corresponding service on an <ph
            conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
          /> marketplace, the Shell service controller triggers the execution of a provisioning script. </li>
        <li><b>Deprovisioning script</b>: When a customer terminates a subscription, the Shell service controller triggers the execution of a deprovisioning script. The subscription is terminated in <ph
            conref="../../Shared/Product_Name.xml#ProductNameTopic/Product_Abbr"
          /> independent of whether the Script execution is successful.</li>
        <li><b>Assign user script</b>: When a customer assigns users to a subscription, the Shell service controller triggers the execution of an assign user script.</li>
        <li><b>Deassign user script</b>: When a customer removes users from a subscription, the Shell service controller triggers the execution of a deassign user script.</li>
        <li><b>Update user script</b>: When a customer updates the data of a user, the Shell service controller triggers the execution of an update user script. </li>
        <li><b>Modification script</b>: When a customer reconfigures an existing subscription to a corresponding service, the Shell service controller triggers the execution of a modification script. </li>
        <li><b>Status script</b>: When a customer opens the <b>Details</b> view of a subscription and then clicks the <b>Custom</b> tab (e.g. <b>Status</b> tab) that has been defined for the underlying marketable service, the Shell service controller triggers the execution of a status script. </li>
        <li><b>Operation script</b>: When a customer selects an operation for his subscription, the Shell service controller triggers the execution of an operation script. </li>
        <li><b>Verification script</b>: When a customer subscribes to a corresponding service, the Shell service controller triggers the execution of a verification script, if it is defined and not empty. In case the verification script returns an error, the subscription process is aborted and the user is informed by a corresponding message. Note that the execution of a verification script is executed in synchronous mode; all other scripts are executed asynchronously.</li>
        <li><b>Start script</b>: When the <codeph>oscm-app</codeph> container is started, the Shell service controller triggers the execution of a script named <codeph>start.sh</codeph>, if this exists in the <codeph>&lt;docker>/config/oscm-app/scripts</codeph> directory. You can use this script, for example, to install additional software or execute remote commands at start-up. </li>
        <li><b>Usage data script</b>: The Shell service controller triggers the execution of a script for collecting events that occurred due to the usage of cloud resources. </li>
      </ul>
    </section>
  </conbody>
</concept>
